// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders properly 1`] = `
NavigationBar {
  "context": Object {},
  "props": Object {},
  "refs": Object {},
  "state": null,
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_didScheduleRenderPhaseUpdate": false,
      "_dispatcher": Object {
        "readContext": [Function],
        "useCallback": [Function],
        "useContext": [Function],
        "useDebugValue": [Function],
        "useDeferredValue": [Function],
        "useEffect": [Function],
        "useImperativeHandle": [Function],
        "useLayoutEffect": [Function],
        "useMemo": [Function],
        "useReducer": [Function],
        "useRef": [Function],
        "useResponder": [Function],
        "useState": [Function],
        "useTransition": [Function],
      },
      "_element": <NavigationBar />,
      "_firstWorkInProgressHook": null,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_isReRender": false,
      "_newState": null,
      "_numberOfReRenders": 0,
      "_renderPhaseUpdates": null,
      "_rendered": <React.Fragment>
        <Navbar
          bg="primary"
          collapseOnSelect={false}
          expand={true}
          variant="dark"
        >
          <Nav
            fill={false}
            justify={false}
          >
            <NavbarBrand
              href="/"
              style={
                Object {
                  "fontSize": "3rem",
                }
              }
            >
              <img
                alt="kathas icon"
                src=""
                style={
                  Object {
                    "display": "inline-block",
                    "marginLeft": 10,
                    "marginRight": 5,
                    "width": "2rem",
                  }
                }
              />
               
              Kathas
            </NavbarBrand>
            <NavLink
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
              href="/"
            >
              Home
            </NavLink>
            <Link
              className="nav-link"
              to="/about"
            >
              About
            </Link>
          </Nav>
        </Navbar>
        <div
          style={
            Object {
              "marginTop": 70,
            }
          }
        />
      </React.Fragment>,
      "_rendering": false,
      "_updater": [Circular],
      "_workInProgressHook": null,
    },
  },
}
`;
